#pragma repy restrictions.test dylink.r2py

my_name = getmyip()

def waitonsocket(socketobj, num):
  try:
    socketobj.recv(1)
  except Exception, e:
    # this is good, the socket was closed...   This will usually be #5...
#    print num, e
    exitall()
  else:
    log("Error, should not return from recv!?!\n")
  


if callfunc == 'initialize':

  ip = my_name
  timeout = 10

  # nm accept only three cons from an IP, since it may be processing one, the
  # maximum I should be able to get and use is four.   The other should be
  # closed.
  junk1 = openconnection(ip,1224, ip, 12345, timeout)
  junk2 = openconnection(ip,1224, ip, 12346, timeout)
  junk3 = openconnection(ip,1224, ip, 12347, timeout)
  junk4 = openconnection(ip,1224, ip, 12348, timeout)
  junk5 = openconnection(ip,1224, ip, 12349, timeout)
  createthread(waitonsocket(junk1,1))
  createthread(waitonsocket(junk2,2))
  createthread(waitonsocket(junk3,3))
  createthread(waitonsocket(junk4,4))
  createthread(waitonsocket(junk5,5))

  sleep(5)
  log("Error:Can happily block on 5 nm connections!?!\n")
  exitall()
#  sockobj.close()
